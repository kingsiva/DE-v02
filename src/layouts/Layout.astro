---
import "@fontsource/poppins/400.css";
import "@fontsource/poppins/500.css";
import { ViewTransitions } from "astro:transitions";
import Footer from "../components/layout/Footer.astro";
import Header from "../components/layout/Header.astro";

interface Props {
  description: string;
  title: string;
}

const { description, title } = Astro.props;
---

<!doctype html>
<html lang="en" x-cloak x-data :class="{ 'dark': $store.theme.isDark }">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <script
      defer
      src="https://cdn.jsdelivr.net/npm/@alpinejs/collapse@3.x.x/dist/cdn.min.js"
    ></script>
    <style>
      .bg-light {
        background-image: url("/assets/de-web-banner-light.jpg");
      }
      .bg-dark {
        background-image: url("/assets/de-web-banner-dark.jpg");
      }
    </style>
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body
    class="bg-very-light-grey text-primary-950 dark:bg-darkBlue dark:text-very-light-grey antialiased transition"
  >
    <Header />
    <main>
      <slot />
    </main>
    <Footer />
    <style is:global>
      [x-cloak] {
        display: none !important;
      }
    </style>
    <script>
      import Alpine from "alpinejs";
      import collapse from "@alpinejs/collapse";

      Alpine.plugin(collapse);

      Alpine.store("theme", {
        init() {
          this.isDark = (() => {
            if (
              typeof localStorage !== "undefined" &&
              localStorage.getItem("theme")
            ) {
              return localStorage.getItem("theme") === "dark";
            }
            if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
              return true;
            }
            return false;
          })();
        },

        isDark: false,

        toggle() {
          this.isDark = !this.isDark;
          localStorage.setItem("theme", this.isDark ? "dark" : "light");
        },
      });

      window.Alpine = Alpine;
      Alpine.start();
    </script>
  </body>
</html>
